// Settings are generalized across theme files

$font-stack: 'GT-Walsheim', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$mono-stack:  'Fira Mono', Consolas, Monaco, monospace;
$font-features: 'kern', 'liga', 'ss02', 'ss04';
$tab-numbers: 'kern', 'liga', 'tnum', 'ss02', 'ss04';

$box-shadow: 0 0.25rem 0.5rem rgba($neutral-500, 0.2);

// -- Media Queries -- //
$screen-width-small: 'screen and (min-width: 32rem)';
$screen-max-small: 'screen and (max-width: 47.999rem)'; // use sparingly
$screen-width-medium: 'screen and (min-width: 48rem)';
$screen-width-large: 'screen and (min-width: 64rem)';
$screen-width-xlarge: 'screen and (min-width: 80rem)';

$small-width: 32rem;
$medium-width: 48rem;
$large-width: 64rem;
$xlarge-width: 80rem;

// -- Element selector lists -- //

$text-inputs: (
  'input[type="email"]',
  'input[type="number"]',
  'input[type="password"]',
  'input[type="search"]',
  'input[type="tel"]',
  'input[type="text"]',
  'input[type="url"]',
  'input:not([type])',
  'textarea',
  'select'
);

$check-inputs: (
  'input[type="radio"]',
  'input[type="checkbox"]'
);

$buttons: (
  'a.button',
  'span.button',
  'label.button',
  'button.button',
  'button[type="button"]',
  'button[type="reset"]',
  'button[type="submit"]',
  'input[type="button"]'
);

$hx: ('h1', 'h2', 'h3', 'h4', 'h5', 'h6');

/*
Mixin to fix iOS safari sticky hover (use only as required)

@include safari-hover-fix() {
  property: default non-hover value;
}
*/

@mixin safari-hover-fix {
  @media (hover: none) {
    &:hover, &.hover { @content; }
  }
}

/* --  Mixins SPECIFICALLY for base/buttons and patterns/buttons  -- */

@mixin fill($default, $active, $hover, $text: white ) {
  border-color: transparent;
  color: $text;
  fill: $text;
  background: $default;

  &:hover, &.hover {
    border-color: transparent;
    color: $text;
    fill: $text;
    background: $hover;
  }

  &:focus, &.focus {
    border-color: transparent;
    color: $text;
    fill: $text;
    background: $hover;
    outline: none;
    box-shadow: 0 0 0 1px $text, 0 0 0 3px $hover;
  }

  &:active, &.active {
    border-color: transparent;
    color: $text;
    fill: $text;
    background: $active;
  }

  &:disabled, &.disabled {
    border-color: $neutral-300;
    color: $neutral-500;
    font-weight: normal;
    fill: $neutral-500;
    background: $neutral-50;
    outline: none;
    cursor: default;
  }
}

@mixin outline($default, $active, $hover, $text: white ) {
  border-color: $default;
  color: $default;
  fill: $default;
  background: transparent;

  &:hover, &.hover {
    border-color: $hover;
    color: $text;
    fill: $text;
    background: $hover;
  }

  &:focus, &.focus {
    border-color: $hover;
    color: $text;
    fill: $text;
    background: $hover;
    outline: none;
    box-shadow: 0 0 0 1px $text, 0 0 0 3px $hover;
  }

  &:active, &.active {
    border-color: $active;
    color: $text;
    fill: $text;
    background: $active;
  }

  &:disabled, &.disabled {
    border-color: $neutral-300;
    color: $neutral-500;
    font-weight: normal;
    fill: $neutral-500;
    background: $neutral-50;
    outline: none;
    cursor: default;
  }
}

@mixin flat($default, $active, $hover) {
  border-color: transparent;
  border-radius: 0.25rem;
  color: $default;
  fill: $default;
  background: transparent;
  padding: 0.375rem 0;
  font-weight: normal;

  &:hover, &.hover {
    border-color: transparent;
    color: $hover;
    fill: $hover;
  }

  &:focus, &.focus {
    border-color: transparent;
    color: $hover;
    fill: $hover;
    box-shadow: none;
    background: rgba($default, 0.1);
  }

  &:active, &.active {
    border-color: transparent;
    color: $active;
    fill: $active;
    background: transparent;
  }

  &:disabled, &.disabled {
    fill: $neutral-500;
    color: $neutral-500;
    cursor: default;
    background: transparent;
    outline: none;
    border: none;
  }
}
